/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SupplyChain, SupplyChainInterface } from "../SupplyChain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
    ],
    name: "ForSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
    ],
    name: "Shipped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "addItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sku",
        type: "uint256",
      },
    ],
    name: "fetchItem",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "enum SupplyChain.State",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
    ],
    name: "receiveItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sku",
        type: "uint256",
      },
    ],
    name: "shipItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055506112cb806100686000396000f3fe6080604052600436106100555760003560e01c806362d6bbdf1461005a578063a26be99914610083578063ad4b9cfb146100ac578063bfb231d2146100ee578063e7fb74c714610130578063f61c899a1461014c575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610dcd565b610175565b005b34801561008f57600080fd5b506100aa60048036038101906100a59190610e21565b610388565b005b3480156100b857600080fd5b506100d360048036038101906100ce9190610e21565b610539565b6040516100e596959493929190610f18565b60405180910390f35b3480156100fa57600080fd5b5061011560048036038101906101109190610e21565b6106f2565b60405161012796959493929190610eb0565b60405180910390f35b61014a60048036038101906101459190610e21565b610803565b005b34801561015857600080fd5b50610173600480360381019061016e9190610e21565b610afd565b005b7fa96ae0fc3224ebd79eebfe54bd130cc9cb94416cddd1f2386115e00b725324686001546040516101a69190610f80565b60405180910390a16040518060c00160405280838152602001600154815260200182815260200160006003811115610207577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506002600060015481526020019081526020016000206000820151816000019080519060200190610274929190610cad565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360038111156102da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060808201518160030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506001805461037e919061100d565b6001819055505050565b80600260038111156103c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060030160009054906101000a900460ff16600381111561041f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461042957600080fd5b6002600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049857600080fd5b60036002600085815260200190815260200160002060030160006101000a81548160ff021916908360038111156104f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fa8142743f8f70a4c26f3691cf4ed59718381fb2f18070ec52be1f1022d8555578360405161052c9190610f80565b60405180910390a1505050565b60606000806000806000600260008881526020019081526020016000206000016002600089815260200190815260200160002060010154600260008a815260200190815260200160002060020154600260008b815260200190815260200160002060030160009054906101000a900460ff1660038111156105e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600260008c815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008d815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685805461065d9061113a565b80601f01602080910402602001604051908101604052809291908181526020018280546106899061113a565b80156106d65780601f106106ab576101008083540402835291602001916106d6565b820191906000526020600020905b8154815290600101906020018083116106b957829003601f168201915b5050505050955095509550955095509550955091939550919395565b60026020528060005260406000206000915090508060000180546107159061113a565b80601f01602080910402602001604051908101604052809291908181526020018280546107419061113a565b801561078e5780601f106107635761010080835404028352916020019161078e565b820191906000526020600020905b81548152906001019060200180831161077157829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b806000600381111561083e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060030160009054906101000a900460ff16600381111561089a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108a457600080fd5b6002600083815260200190815260200160002060020154803410156108c857600080fd5b82336002600086815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600085815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60026000878152602001908152602001600020600201549081150290604051600060405180830381858888f193505050501580156109b0573d6000803e3d6000fd5b5060016002600086815260200190815260200160002060030160006101000a81548160ff02191690836003811115610a11577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb352054399572784604051610a459190610f80565b60405180910390a160006002600083815260200190815260200160002060020154905060008134610a769190611063565b90506002600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610af4573d6000803e3d6000fd5b50505050505050565b6002600082815260200190815260200160002060030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b6c57600080fd5b8160016003811115610ba7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002600083815260200190815260200160002060030160009054906101000a900460ff166003811115610c03577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610c0d57600080fd5b600280600085815260200190815260200160002060030160006101000a81548160ff02191690836003811115610c6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507ff00b9a5725b80c54016f42114f6ed7792d22eecb116011c4afac29c57bef6c9583604051610ca09190610f80565b60405180910390a1505050565b828054610cb99061113a565b90600052602060002090601f016020900481019282610cdb5760008555610d22565b82601f10610cf457805160ff1916838001178555610d22565b82800160010185558215610d22579182015b82811115610d21578251825591602001919060010190610d06565b5b509050610d2f9190610d33565b5090565b5b80821115610d4c576000816000905550600101610d34565b5090565b6000610d63610d5e84610fc0565b610f9b565b905082815260208101848484011115610d7b57600080fd5b610d868482856110f8565b509392505050565b600082601f830112610d9f57600080fd5b8135610daf848260208601610d50565b91505092915050565b600081359050610dc78161127e565b92915050565b60008060408385031215610de057600080fd5b600083013567ffffffffffffffff811115610dfa57600080fd5b610e0685828601610d8e565b9250506020610e1785828601610db8565b9150509250929050565b600060208284031215610e3357600080fd5b6000610e4184828501610db8565b91505092915050565b610e5381611097565b82525050565b610e62816110e6565b82525050565b6000610e7382610ff1565b610e7d8185610ffc565b9350610e8d818560208601611107565b610e9681611259565b840191505092915050565b610eaa816110dc565b82525050565b600060c0820190508181036000830152610eca8189610e68565b9050610ed96020830188610ea1565b610ee66040830187610ea1565b610ef36060830186610e59565b610f006080830185610e4a565b610f0d60a0830184610e4a565b979650505050505050565b600060c0820190508181036000830152610f328189610e68565b9050610f416020830188610ea1565b610f4e6040830187610ea1565b610f5b6060830186610ea1565b610f686080830185610e4a565b610f7560a0830184610e4a565b979650505050505050565b6000602082019050610f956000830184610ea1565b92915050565b6000610fa5610fb6565b9050610fb1828261116c565b919050565b6000604051905090565b600067ffffffffffffffff821115610fdb57610fda61122a565b5b610fe482611259565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611018826110dc565b9150611023836110dc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110585761105761119d565b5b828201905092915050565b600061106e826110dc565b9150611079836110dc565b92508282101561108c5761108b61119d565b5b828203905092915050565b60006110a2826110bc565b9050919050565b60008190506110b78261126a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110f1826110a9565b9050919050565b82818337600083830152505050565b60005b8381101561112557808201518184015260208101905061110a565b83811115611134576000848401525b50505050565b6000600282049050600182168061115257607f821691505b60208210811415611166576111656111fb565b5b50919050565b61117582611259565b810181811067ffffffffffffffff821117156111945761119361122a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6004811061127b5761127a6111cc565b5b50565b611287816110dc565b811461129257600080fd5b5056fea2646970667358221220be6321180fe4b88225accb5f5a76d194c6435c7cc399fec90c2f697a135017d764736f6c63430008040033";

export class SupplyChain__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SupplyChain> {
    return super.deploy(overrides || {}) as Promise<SupplyChain>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SupplyChain {
    return super.attach(address) as SupplyChain;
  }
  connect(signer: Signer): SupplyChain__factory {
    return super.connect(signer) as SupplyChain__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SupplyChainInterface {
    return new utils.Interface(_abi) as SupplyChainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SupplyChain {
    return new Contract(address, _abi, signerOrProvider) as SupplyChain;
  }
}
